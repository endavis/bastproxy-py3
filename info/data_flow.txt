Data Flow - Client To Mud
-------------------------------------------------------------------------
1) Proxy receives the data from the client
2) The data is transformed to a ToMudRecord and is sent to the client data handler
    by calling the record
3) For each line that is not internal and not a telnet command:
    ToMudRecord raises the event 'ev_to_mud_data_modify'
     - Use this event to transform data received from the client
            set the 'line' key to the new line in args
4) Proxy then sends the resulting message to the mud by queuing it as a NetworkData object
5) After all data is sent, ToMudRecord will raise "ev_to_mud_data_read" event on data
    that is not a telnet command
       - Use this event if you only need to see the data sent to the mud,
           the data cannot be transformed through this event

Data Flow - Mud to Client
-------------------------------------------------------------------------
1) Proxy receives the data from the mud
2) The data is transformed to a ToClientRecord and is sent to the mud data handler
    by calling the record
3) For each line that is not internal and not a telnet command:
    ToClientRecord raises the event 'ev_to_client_data_modify'
     - Use this event to transform data received from the mud
            set the 'line' key to the new line in args
4) Proxy then sends the resulting message to the client by queuing it as a NetworkData object
5) After all data is sent, ToClientRecord will raise "ev_to_client_data_read" event on data
    that is not a telnet command
       - Use this event if you only need to see the data sent to the client,
           the data cannot be transformed through this event
NOTE: no events are raised for data sent to the client that originated in the proxy

Sending data to the mud
-------------------------------------------------------------------------
1) use a ToMudRecord and send by calling the record

Sending data to clients, this will also send it through the interpreter
-------------------------------------------------------------------------
1)  use a ToClientRecord and send by calling the record


